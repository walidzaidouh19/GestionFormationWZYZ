package com.sqli.model;

// Generated 15 nov. 2014 14:53:03 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Personnel generated by hbm2java
 */
@Entity
@Table(name = "personnel", catalog = "gestionformation")
public class Personnel implements java.io.Serializable {

	private String matricule;
	private String nomCollaborateur;
	private String prenomCollaborateur;
	private String adrCollaborateur;
	private String site;
	private String busnessUnit;
	private String sexe;
	private Date dateEmbauche;
	private String email;
	private String diplome;
	private Set<Compte> comptes = new HashSet<Compte>(0);
	private Set<Assiste> assistes = new HashSet<Assiste>(0);
	private Adminstrateur adminstrateur;
	private Set<SessionF> sessionFs = new HashSet<SessionF>(0);
	private Set<Evaluation> evaluations = new HashSet<Evaluation>(0);
	private Set<ResponsableFormation> responsableFormations = new HashSet<ResponsableFormation>(0);
	private Set<Collaborateur> collaborateurs = new HashSet<Collaborateur>(0);
	private Set<Formateur> formateurs = new HashSet<Formateur>(0);

	public Personnel() {
	}

	public Personnel(String matricule, String nomCollaborateur,
			String prenomCollaborateur, String adrCollaborateur, String site,
			String busnessUnit, String sexe, Date dateEmbauche, String email,
			String diplome) {
		this.matricule = matricule;
		this.nomCollaborateur = nomCollaborateur;
		this.prenomCollaborateur = prenomCollaborateur;
		this.adrCollaborateur = adrCollaborateur;
		this.site = site;
		this.busnessUnit = busnessUnit;
		this.sexe = sexe;
		this.dateEmbauche = dateEmbauche;
		this.email = email;
		this.diplome = diplome;
	}

	public Personnel(String matricule, String nomCollaborateur,
			String prenomCollaborateur, String adrCollaborateur, String site,
			String busnessUnit, String sexe, Date dateEmbauche, String email,
			String diplome, Set<Compte> comptes, Set<Assiste> assistes,
			Adminstrateur adminstrateur, Set<SessionF> sessionFs, Set<Evaluation> evaluations,
			Set<ResponsableFormation> responsableFormations, Set<Collaborateur> collaborateurs, Set<Formateur> formateurs) {
		this.matricule = matricule;
		this.nomCollaborateur = nomCollaborateur;
		this.prenomCollaborateur = prenomCollaborateur;
		this.adrCollaborateur = adrCollaborateur;
		this.site = site;
		this.busnessUnit = busnessUnit;
		this.sexe = sexe;
		this.dateEmbauche = dateEmbauche;
		this.email = email;
		this.diplome = diplome;
		this.comptes = comptes;
		this.assistes = assistes;
		this.adminstrateur = adminstrateur;
		this.sessionFs = sessionFs;
		this.evaluations = evaluations;
		this.responsableFormations = responsableFormations;
		this.collaborateurs = collaborateurs;
		this.formateurs = formateurs;
	}

	@Id
	@Column(name = "matricule", unique = true, nullable = false, length = 50)
	public String getMatricule() {
		return this.matricule;
	}

	public void setMatricule(String matricule) {
		this.matricule = matricule;
	}

	@Column(name = "nom_collaborateur", nullable = false, length = 50)
	public String getNomCollaborateur() {
		return this.nomCollaborateur;
	}

	public void setNomCollaborateur(String nomCollaborateur) {
		this.nomCollaborateur = nomCollaborateur;
	}

	@Column(name = "prenom_collaborateur", nullable = false)
	public String getPrenomCollaborateur() {
		return this.prenomCollaborateur;
	}

	public void setPrenomCollaborateur(String prenomCollaborateur) {
		this.prenomCollaborateur = prenomCollaborateur;
	}

	@Column(name = "adr_collaborateur", nullable = false)
	public String getAdrCollaborateur() {
		return this.adrCollaborateur;
	}

	public void setAdrCollaborateur(String adrCollaborateur) {
		this.adrCollaborateur = adrCollaborateur;
	}

	@Column(name = "site", nullable = false)
	public String getSite() {
		return this.site;
	}

	public void setSite(String site) {
		this.site = site;
	}

	@Column(name = "busness_unit", nullable = false)
	public String getBusnessUnit() {
		return this.busnessUnit;
	}

	public void setBusnessUnit(String busnessUnit) {
		this.busnessUnit = busnessUnit;
	}

	@Column(name = "sexe", nullable = false, length = 30)
	public String getSexe() {
		return this.sexe;
	}

	public void setSexe(String sexe) {
		this.sexe = sexe;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_embauche", nullable = false, length = 10)
	public Date getDateEmbauche() {
		return this.dateEmbauche;
	}

	public void setDateEmbauche(Date dateEmbauche) {
		this.dateEmbauche = dateEmbauche;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "diplome", nullable = false)
	public String getDiplome() {
		return this.diplome;
	}

	public void setDiplome(String diplome) {
		this.diplome = diplome;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personnel")
	public Set<Compte> getComptes() {
		return this.comptes;
	}

	public void setComptes(Set<Compte> comptes) {
		this.comptes = comptes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personnel")
	public Set<Assiste> getAssistes() {
		return this.assistes;
	}

	public void setAssistes(Set<Assiste> assistes) {
		this.assistes = assistes;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "personnel")
	public Adminstrateur getAdminstrateur() {
		return this.adminstrateur;
	}

	public void setAdminstrateur(Adminstrateur adminstrateur) {
		this.adminstrateur = adminstrateur;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personnel")
	public Set<SessionF> getSessionFs() {
		return this.sessionFs;
	}

	public void setSessionFs(Set<SessionF> sessionFs) {
		this.sessionFs = sessionFs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personnel")
	public Set<Evaluation> getEvaluations() {
		return this.evaluations;
	}

	public void setEvaluations(Set<Evaluation> evaluations) {
		this.evaluations = evaluations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personnel")
	public Set<ResponsableFormation> getResponsableFormations() {
		return this.responsableFormations;
	}

	public void setResponsableFormations(Set<ResponsableFormation> responsableFormations) {
		this.responsableFormations = responsableFormations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personnel")
	public Set<Collaborateur> getCollaborateurs() {
		return this.collaborateurs;
	}

	public void setCollaborateurs(Set<Collaborateur> collaborateurs) {
		this.collaborateurs = collaborateurs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personnel")
	public Set<Formateur> getFormateurs() {
		return this.formateurs;
	}

	public void setFormateurs(Set<Formateur> formateurs) {
		this.formateurs = formateurs;
	}

}
